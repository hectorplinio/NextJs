import "tailwindcss/tailwind.css";
import Link from "next/link";
import Head from "next/head";
import React, { useState, useMemo } from "react";

function App() {
  const [length, set_length] = useState(3);
  const [name, set_name] = useState("");

  return (
    <>
      <Head>
        <title>Render üêæ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="central">
        <div className="cabecera">
          <h1 className="tituloHola">Esta es la p√°gina de useEffect vs useMemo</h1>
        </div>
        <div className="botones">
          <button className="boton">
            <Link href="/">
              <a className="botonPrincipal">Volver!</a>
            </Link>
          </button>
        </div>
      </main>
    <div className="cajaGrande">
            <div className="caja1">
                <h1 className="titulo">useEffect</h1>
                <NameDisplay name={name} />
                <input value={name} onChange={(e) => set_name(e.target.value)} id="cajaBlanca" />
                
            </div>
            <div className="caja1">
                <h1>useMemo</h1>
                <input  id="cajaBlanca" 
                value={length}
                onChange={(e) => set_length(Number(e.target.value))}
                />
                <FibDisplay length={length} />
            </div>
    </div>
    </>
  );
}

function FibDisplay({ length }) {
  const numbers = useMemo(() => {
    console.log("Calculating numbers...");
    const result = [1, 1];
    for (let i = 2; i < length; i++) {
      result[i] = result[i - 1] + result[i - 2];
    }
    return result;
  }, [length]);

  return (
    <p>
      {length} numbers of the fibonacci sequence: {numbers.join(", ")}
    </p>
  );
}

const NameDisplay = React.memo(function ({ name }) {
  console.log("Rerendering name...");
  return <p>Your name is {name}</p>;
});

export default App;
